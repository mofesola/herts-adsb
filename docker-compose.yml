version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    mem_limit: ${MEM_LIMIT}
    env_file:
      - .env
    environment:
      - cluster.name=${CLUSTER_NAME}
      - bootstrap.memory_lock=true
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es02,es03
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    mem_limit: ${MEM_LIMIT}
    env_file:
      - .env
    environment:
      - cluster.name=${CLUSTER_NAME}
      - bootstrap.memory_lock=true
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es01,es03
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    mem_limit: ${MEM_LIMIT}
    env_file:
      - .env
    environment:
      - cluster.name=${CLUSTER_NAME}
      - bootstrap.memory_lock=true
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es02,es01
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata3:/usr/share/elasticsearch/data
    networks:
      - esnet
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    image: 'docker.elastic.co/kibana/kibana:${STACK_VERSION}'
    container_name: kibana
    env_file:
      - .env
    volumes:
      - kibanadata:/usr/share/kibana/data
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - esnet
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  
  app:
    build: .
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    restart: "unless-stopped"
    networks:
      - esnet

    env_file:
      - .env
volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local
  kibanadata:
    driver: local

networks:
  esnet: